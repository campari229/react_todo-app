{"version":3,"sources":["components/Header/Header.js","components/TodoList/TodoList.js","components/Shape/Shape.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","state","tempoToto","tempoId","addTempoTodo","event","setState","target","value","todoMaker","text","id","input","key","props","addTodo","prevState","className","onChange","this","onKeyDown","placeholder","React","Component","TodoList","PropTypes","arrayOf","shape","todo","string","isRequired","isDone","bool","number","editText","isEditing","onDoubleClickEdit","innerText","currentTarget","addEditedText","onKeyDownEdit","edit","parentElement","onBlurEdit","todos","map","onDoubleClick","type","checked","readOnly","onClick","todoCheck","htmlFor","remove","onBlur","ref","focus","Footer","setFilter","clear","filter","length","App","todosToShow","todoId","trim","item","removeTodo","todoEdit","editedTodo","clearCompleted","makeAllChecked","every","shownTodos","Boolean","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4cb15b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Header extends React.Component {\n  state = {\n    tempoToto: '',\n    tempoId: 1,\n  }\n\n  addTempoTodo = (event) => {\n    this.setState({\n      tempoToto: event.target.value,\n    });\n  }\n\n  todoMaker = (event) => {\n    const text = this.state.tempoToto;\n    const id = this.state.tempoId + 1;\n    const input = event.target;\n\n    if (event.key === 'Enter') {\n      this.props.addTodo(text, id);\n\n      this.setState(prevState => ({\n        tempoId: prevState.tempoId + 1,\n        tempoToto: '',\n      }));\n\n      input.value = '';\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          onChange={this.addTempoTodo}\n          onKeyDown={this.todoMaker}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todosShape } from '../Shape/Shape';\n\nexport class TodoList extends React.Component {\n  state = {\n    editText: '',\n    isEditing: false,\n  }\n\n  onDoubleClickEdit = (event) => {\n    this.setState({\n      isEditing: true,\n      editText: event.target.innerText,\n    });\n\n    const todo = event.currentTarget;\n\n    if (!todo.className) {\n      todo.className = 'editing';\n    }\n  }\n\n  addEditedText = (event) => {\n    this.setState({\n      editText: event.target.value,\n    });\n  }\n\n  onKeyDownEdit = id => (event) => {\n    const input = event.target;\n\n    if (event.key === 'Enter') {\n      if (this.state.editText) {\n        this.props.edit(this.state.editText, id);\n        input.parentElement.className = '';\n        this.setState({\n          isEditing: false,\n        });\n      } else {\n        input.parentElement.className = '';\n      }\n    }\n  }\n\n  onBlurEdit = id => (event) => {\n    const input = event.target;\n\n    if (this.state.editText) {\n      this.props.edit(this.state.editText, id);\n      input.parentElement.className = '';\n    } else {\n      input.parentElement.className = '';\n    }\n\n    this.setState({\n      isEditing: false,\n    });\n  }\n\n  render() {\n    return (\n      <ul className=\"todo-list\">\n        {this.props.todos.map(todo => (\n          <li\n            className={todo.isDone && 'completed'}\n            onDoubleClick={this.onDoubleClickEdit}\n            key={todo.id}\n          >\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                checked={todo.isDone}\n                readOnly\n                className=\"toggle\"\n                id={todo.id}\n                onClick={() => this.props.todoCheck(todo.id)}\n              />\n              <span htmlFor={todo.id}>{todo.todo}</span>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => this.props.remove(todo.id)}\n              />\n            </div>\n            {\n              this.state.isEditing\n                && (\n                  <input\n                    type=\"text\"\n                    className=\"edit\"\n                    onChange={this.addEditedText}\n                    onKeyDown={this.onKeyDownEdit(todo.id)}\n                    onBlur={this.onBlurEdit(todo.id)}\n                    ref={input => input && input.focus()}\n                    value={this.state.editText}\n                  />\n                )\n            }\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todoCheck: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired,\n  todos: todosShape.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const todosShape = PropTypes.arrayOf(\n  PropTypes.shape({\n    todo: PropTypes.string.isRequired,\n    isDone: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { todosShape } from '../Shape/Shape';\n\nexport const Footer = ({ todos, setFilter, clear }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todos.filter(todo => todo.isDone === false).length} items left`}\n    </span>\n    <ul className=\"filters\">\n      <li>\n        <button\n          onClick={() => setFilter()}\n          type=\"button\"\n        >\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          type=\"button\"\n          onClick={() => setFilter('inProces')}\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => setFilter('completed')}\n          type=\"button\"\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={clear}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: todosShape.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosToShow: 'all',\n  }\n\n  addTodo = (text, todoId) => {\n    if (text.trim().length) {\n      this.setState(prevState => ({\n        todos: [\n          ...prevState.todos,\n          {\n            todo: text,\n            isDone: false,\n            id: todoId,\n          },\n        ],\n      }));\n    }\n  }\n\n  todoCheck = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            isDone: !item.isDone,\n          };\n        }\n\n        return item;\n      }),\n    }));\n  }\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(item => item.id !== id),\n    }));\n  }\n\n  todoEdit = (editedTodo, id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            todo: editedTodo,\n          };\n        }\n\n        return item;\n      }),\n    }));\n  }\n\n  setFilter = (filter) => {\n    this.setState({\n      todosToShow: filter,\n    });\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.isDone === false),\n    }));\n  }\n\n  makeAllChecked = () => {\n    if (this.state.todos.every(todo => todo.isDone === true)) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          isDone: false,\n        })),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          isDone: true,\n        })),\n      }));\n    }\n  }\n\n  todosToShow(shownTodos) {\n    switch (shownTodos) {\n      case 'completed':\n        return this.state.todos.filter(todo => todo.isDone === true);\n\n      case 'inProces':\n        return this.state.todos.filter(todo => todo.isDone === false);\n\n      default:\n        return this.state.todos;\n    }\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.makeAllChecked}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          {Boolean(todos.length)\n            && (\n              <TodoList\n                todos={this.todosToShow(this.state.todosToShow)}\n                todoCheck={this.todoCheck}\n                remove={this.removeTodo}\n                edit={this.todoEdit}\n              />\n            )\n          }\n        </section>\n        {Boolean(todos.length)\n          && (\n            <Footer\n              todos={this.state.todos}\n              setFilter={this.setFilter}\n              clear={this.clearCompleted}\n            />\n          )\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}